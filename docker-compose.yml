services:
    zookeeper:
      image: confluentinc/cp-zookeeper:7.5.0
      container_name: zookeeper
      ports:
        - "2181:2181"
      healthcheck:
        test: echo srvr | nc zookeeper 2181 || exit 1
        start_period: 10s
        retries: 20
        interval: 10s
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

    broker:
      image: confluentinc/cp-server:7.5.0
      container_name: kafka
      depends_on:
        zookeeper:
          condition: service_healthy
      ports:
        - "9092:9092"
        - "9101:9101"
      healthcheck:
        test: nc -z localhost 9092 || exit -1
        start_period: 15s
        interval: 5s
        timeout: 10s
        retries: 10
      environment:
        # ID of the broker in a cluster
        KAFKA_BROKER_ID: 1
        # Connect to Zoo Keeper for distributed coordination and leader election
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        # Define how clients connect to brokers
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
        # How many copies are maintained for fault tolerance
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        # Confluent Metrics Reporter for Control Center Cluster Monitoring
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: 'broker:9092'
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        CONFLUENT_METRICS_ENABLE: 'true'
        # For fixing the bug replication factor 3 > the number of node
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'


    # Confluent control center to manage Kafka
    control-center:
      image: confluentinc/cp-enterprise-control-center:7.5.0
      container_name: control
      depends_on:
        - broker
      ports:
        - "9021:9021"
      healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:9021/healthcheck" ] # Adjust the URL and options as needed
        interval: 30s
        timeout: 10s
        retries: 3
      environment:
        CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
        CONTROL_CENTER_REPLICATION_FACTOR: 1
        CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
        CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
        CONFLUENT_METRICS_TOPIC_REPLICATION: 1
        CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1